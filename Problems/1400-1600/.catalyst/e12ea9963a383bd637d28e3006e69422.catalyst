{"title":{"en":"E. Matrix and Shifts","ru":"E. Матрица и сдвиги"},"contestId":"1660","problemIndex":"E","timeLimit":{"en":"2 seconds","ru":"2 секунды"},"memLimit":{"en":"256 megabytes","ru":"256 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>You are given a binary matrix $$$A$$$ of size $$$n \\times n$$$. Rows are numbered from top to bottom from $$$1$$$ to $$$n$$$, columns are numbered from left to right from $$$1$$$ to $$$n$$$. The element located at the intersection of row $$$i$$$ and column $$$j$$$ is called $$$A_{ij}$$$. Consider a set of $$$4$$$ operations:</p><ol> <li> Cyclically shift all rows up. The row with index $$$i$$$ will be written in place of the row $$$i-1$$$ ($$$2 \\le i \\le n$$$), the row with index $$$1$$$ will be written in place of the row $$$n$$$. </li><li> Cyclically shift all rows down. The row with index $$$i$$$ will be written in place of the row $$$i+1$$$ ($$$1 \\le i \\le n - 1$$$), the row with index $$$n$$$ will be written in place of the row $$$1$$$. </li><li> Cyclically shift all columns to the left. The column with index $$$j$$$ will be written in place of the column $$$j-1$$$ ($$$2 \\le j \\le n$$$), the column with index $$$1$$$ will be written in place of the column $$$n$$$. </li><li> Cyclically shift all columns to the right. The column with index $$$j$$$ will be written in place of the column $$$j+1$$$ ($$$1 \\le j \\le n - 1$$$), the column with index $$$n$$$ will be written in place of the column $$$1$$$. </li></ol><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/60c1cf4f800e532afaecc009e564efc466a1a6f3.png\" style=\"max-width: 100.0%;max-height: 100.0%;\">   <span class=\"tex-font-size-small\">The $$$3 \\times 3$$$ matrix is shown on the left before the $$$3$$$-rd operation is applied to it, on the right&nbsp;— after.</span> </center><p>You can perform an arbitrary (possibly zero) number of operations on the matrix; the operations can be performed in any order.</p><p>After that, you can perform an arbitrary (possibly zero) number of new xor-operations:</p><ul> <li> Select any element $$$A_{ij}$$$ and assign it with new value $$$A_{ij} \\oplus 1$$$. In other words, the value of $$$(A_{ij} + 1) \\bmod 2$$$ will have to be written into element $$$A_{ij}$$$. </li></ul><p>Each application of this xor-operation costs one burl. Note that the $$$4$$$ shift operations&nbsp;— are free. These $$$4$$$ operations can only be performed before xor-operations are performed.</p><p>Output the minimum number of burles you would have to pay to make the $$$A$$$ matrix unitary. A <span class=\"tex-font-style-it\">unitary matrix</span> is a matrix with ones on the main diagonal and the rest of its elements are zeros (that is, $$$A_{ij} = 1$$$ if $$$i = j$$$ and $$$A_{ij} = 0$$$ otherwise).</p>","ru":"<p>Вам задана двоичная матрица $$$A$$$ размера $$$n \\times n$$$. Строки пронумерованы сверху вниз от $$$1$$$ до $$$n$$$, столбцы пронумерованы слева направо от $$$1$$$ до $$$n$$$. Ячейка, находящаяся на пересечении строки $$$i$$$ и столбца $$$j$$$ называется $$$A_{ij}$$$. Рассмотрим набор из $$$4$$$ операций:</p><ol> <li> Циклически сдвинуть все строки вверх. Строка с номером $$$i$$$ будет записана на место строки $$$i-1$$$ ($$$2 \\le i \\le n$$$), строка с номером $$$1$$$ будет записана на место строки $$$n$$$. </li><li> Циклически сдвинуть все строки вниз. Строка с номером $$$i$$$ будет записана на место строки $$$i+1$$$ ($$$1 \\le i \\le n - 1$$$), строка с номером $$$n$$$ будет записана на место строки $$$1$$$. </li><li> Циклически сдвинуть все столбцы влево. Столбец с номером $$$j$$$ будет записан на место столбца $$$j-1$$$ ($$$2 \\le j \\le n$$$), столбец с номером $$$1$$$ будет записан на место столбца $$$n$$$. </li><li> Циклически сдвинуть все столбцы вправо. Столбец с номером $$$j$$$ будет записан на место столбца $$$j+1$$$ ($$$1 \\le j \\le n - 1$$$), столбец с номером $$$n$$$ будет записан на место столбца $$$1$$$. </li></ol><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/60c1cf4f800e532afaecc009e564efc466a1a6f3.png\" style=\"max-width: 100.0%;max-height: 100.0%;\">   <span class=\"tex-font-size-small\">Слева изображена матрица $$$3 \\times 3$$$ до применения к ней операции $$$3$$$, справа&nbsp;— после.</span> </center><p>Вы можете провести над матрицей произвольное (возможно, нулевое) количество операций, операции можно проводить в любом порядке.</p><p>После этого вы можете осуществить произвольное (возможно, нулевое) количество новых xor-операций:</p><ul> <li> Выбрать любую ячейку $$$A_{ij}$$$ и записать в нее значение выражения $$$A_{ij} \\oplus 1$$$. Другими словами, в ячейку $$$A_{ij}$$$ необходимо будет записать значение $$$(A_{ij} + 1) \\bmod 2$$$. </li></ul><p>Каждое применение этой xor-операции стоит один бурль. Заметим, что $$$4$$$ операции сдвигов&nbsp;— бесплатные. Эти $$$4$$$ операции можно проводить только до осуществления xor-операций.</p><p>Выведите минимальное количество бурлей, сколько придётся заплатить, чтобы сделать матрицу $$$A$$$ единичной. <span class=\"tex-font-style-it\">Единичной</span> называется такая матрица, на главной диагонали которой стоят единицы, а остальные её элементы являются нулями (то есть, $$$A_{ij} = 1$$$ при $$$i = j$$$ и $$$A_{ij} = 0$$$ иначе).</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>The first line of the input contains an integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$)&nbsp;—the number of test cases in the test.</p><p>The descriptions of the test cases follow. Before each test case, an empty line is written in the input.</p><p>The first line of each test case contains a single number $$$n$$$ ($$$1 \\le n \\le 2000$$$)</p><p>This is followed by $$$n$$$ lines, each containing exactly $$$n$$$ characters and consisting only of zeros and ones. These lines describe the values in the elements of the matrix.</p><p>It is guaranteed that the sum of $$$n^2$$$ values over all test cases does not exceed $$$4 \\cdot 10^6$$$.</p>","ru":"<div class=\"section-title\">Входные данные</div><p>В первой строке входных данных записано целое число $$$t$$$ ($$$1 \\le t \\le 10^4$$$)&nbsp;— количество наборов входных данных в тесте.</p><p>Далее следуют описания наборов входных данных. Перед каждым набором входных данных во входных данных записана пустая строка.</p><p>В первой строке каждого набора входных данных записано единственное число $$$n$$$ ($$$1 \\le n \\le 2000$$$)</p><p>Затем следует $$$n$$$ строк, каждая из которых содержит ровно $$$n$$$ символов и состоит только из нулей и единиц. Эти строки описывают значения в ячейках матрицы.</p><p>Гарантируется, что сумма значений $$$n^2$$$ по всем наборам входных данных не превышает $$$4 \\cdot 10^6$$$.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>For each test case, output the minimum number of burles you would have to pay to make the $$$A$$$ matrix unitary. In other words, print the minimum number of xor-operations it will take after applying cyclic shifts to the matrix for the $$$A$$$ matrix to become unitary.</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>Для каждого набора входных данных выведите минимальное количество бурлей, сколько придётся заплатить, чтобы сделать матрицу $$$A$$$ единичной. Иными словами, выведите минимальное количество xor-операций, которое потребуется совершить после применения циклических сдвигов к матрице, для того, чтобы матрица $$$A$$$ стала единичной.</p>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><p>In the first test case, you can do the following: first, shift all the rows down cyclically, then the main diagonal of the matrix will contain only \"<span class=\"tex-font-style-tt\">1</span>\". Then it will be necessary to apply xor-operation to the only \"<span class=\"tex-font-style-tt\">1</span>\" that is not on the main diagonal.</p><p>In the second test case, you can make a unitary matrix by applying the operation $$$2$$$&nbsp;— cyclic shift of rows upward twice to the matrix.</p>","ru":"<div class=\"section-title\">Примечание</div><p>В первом наборе входных данных можно действовать следующим образом: сначала циклически сдвинуть все строки вниз, тогда на главной диагонали матрицы будут стоять одни единицы. Затем необходимо будет применить xor-операцию к единственной единице, которая окажется не на главной диагонали.</p><p>Во втором наборе входных данных можно получить единичную матрицу, дважды применив к матрице операцию $$$2$$$&nbsp;— циклический сдвиг строк вверх.</p>"},"sampleTestcases":[{"id":1651512810428,"input":"4\n\n3\n010\n011\n100\n\n5\n00010\n00001\n10000\n01000\n00100\n\n2\n10\n10\n\n4\n1111\n1011\n1111\n1111\n","output":"1\n0\n2\n11\n","result":{"id":1651512810428,"stdout":"1\r\n0\r\n2\r\n11\r\n","stderr":"","exitcode":0,"signal":null,"time":34,"timeout":false}}],"submitUrl":"https://codeforces.com/problemset/submit","language":"c++"}